mutate(P_N = P_N)
return(opt_N)
}
price_parameters
get_opt_N(2)
get_opt_N(3)
get_opt_N(4)
get_opt_N(5)
get_opt_N(6)
get_opt_N(7)
get_opt_N(8)
get_opt_N(9)
1:nrow(price_parameters)
opt_N_all_ls <- lapply(1:nrow(price_parameters), get_opt_N)
opt_N_all_ls
opt_N_all_ls <- lapply(1:nrow(price_parameters), get_opt_N) %>% bind_rows()
opt_N_all_ls
P_C_seq <- seq(2.5, 4.5, by = 1)
P_N_seq <- seq(0.3, 0.6, by = 0.3)
N_seq <- seq(100, 300, by = 100)
P_C_seq
P_N_seq
N_seq
(
price_parameters <- expand.grid(P_C = P_C_seq, P_N = P_N_seq, N = N_seq) %>%
tibble() %>%
arrange(P_C, P_N)
)
N_seq <- seq(100, 300, by = 10)
N_seq
P_C_seq <- seq(2.5, 4.5, by = 1)
P_N_seq <- seq(0.3, 0.6, by = 0.3)
N_seq <- seq(100, 300, by = 10)
(
price_parameters <- expand.grid(P_C = P_C_seq, P_N = P_N_seq, N = N_seq) %>%
tibble() %>%
arrange(P_C, P_N)
)
price_parameters
profit_data <- mutate(price_parameters, profit = get_profit(N, P_C, P_N))
profit_data
P_C_seq <- seq(2.5, 4.5, by = 1)
P_N_seq <- seq(0.3, 0.6, by = 0.3)
N_seq <- seq(100, 300, by = 100)
(
price_parameters <- expand.grid(P_C = P_C_seq, P_N = P_N_seq, N = N_seq) %>%
tibble() %>%
arrange(P_C, P_N)
)
profit_data <- mutate(price_parameters, profit = get_profit(N, P_C, P_N))
profit_data
profit_data %>%
group_by(P_C, P_N) %>%
arrange(profit)
profit_data %>%
group_by(P_C, P_N) %>%
arrange(profit) %>%
slice(n())
profit_data %>%
group_by(P_C, P_N) %>%
arrange(profit)
profit_data %>%
group_by(P_C, P_N) %>%
arrange(profit) %>%
slice(n())
county_yield
install.packages("microbenchmark")
install.packages("mapview")
install.packages("flipbookr")
install.packages("extrafontdb")
install.packages("Rttf2pt1")
font_import()
library(extrafont)
font_import()
font_import()
install.packages("ggcorrplot")
install.packages("ggalt")
install.packages("rmarkdown")
N <- 2
T <- 2
set.seed(582374)
price_data <- data.frame(
price = runif(N * T, min = 2, max = 6),
county = c(rep('Lancaster',2),rep('Douglas',2)),
year = c(2015, 2016, 2015, 2016)
)
yield_data <- data.frame(
yield = runif(N * T, min = 180, max = 280),
county = c('Lancaster','Douglas','Lancaster','Douglas'),
year = c(2015, 2015, 2016, 2016)
)
price_data
yield_data
yield_data <- data.frame(
yield = runif(6, min = 180, max = 280),
county = c("Lancaster", "Douglas", "Chase", "Lancaster", "Douglas", "Chase"),
year = c(2015, 2015, 2015, 2016, 2016, 2016)
)
yield_data
flights_Jan <- flights %>%
filter(month == 1) %>%
select(month, day, dep_delay, origin)
library(tidyverse)
flights_Jan <- flights %>%
filter(month == 1) %>%
select(month, day, dep_delay, origin)
daily_temp_Jan <- weather %>%
filter(month == 1) %>%
group_by(origin, month, day) %>%
summarize(temp = mean(temp))
hourly_temp_Jan <- weather %>%
filter(month == 1) %>%
select(origin, month, day, hour, temp)
library(nycflights13)
flights_Jan <- flights %>%
filter(month == 1) %>%
select(month, day, dep_delay, origin)
daily_temp_Jan <- weather %>%
filter(month == 1) %>%
group_by(origin, month, day) %>%
summarize(temp = mean(temp))
hourly_temp_Jan <- weather %>%
filter(month == 1) %>%
select(origin, month, day, hour, temp)
flights_Jan
daily_temp_Jan
left_join(flights_jan, daily_temp_Jan, by = c("origin", "day", "month"))
left_join(flights_Jan, daily_temp_Jan, by = c("origin", "day", "month"))
hourly_temp_Jan
flights_Jan
left_join(flights_Jan, hourly_temp_Jan, by = c("origin", "day", "month"))
?merge
getwd()
county_yield <- readRDS("Chapter-4-DataVisualization/county_yield.rds")
mean_yield <- county_yield %>%
group_by(year) %>%
summarize(
corn_yield = mean(corn_yield, na.rm = TRUE)
) %>%
filter(!is.na(year))
mean_yield <-
county_yield %>%
data.table() %>%
group_by(year) %>%
summarize(
corn_yield = mean(corn_yield, na.rm = TRUE)
) %>%
filter(!is.na(year))
library(data.table)
mean_yield <-
county_yield %>%
data.table() %>%
group_by(year) %>%
summarize(
corn_yield = mean(corn_yield, na.rm = TRUE)
) %>%
filter(!is.na(year))
mean_yield <-
county_yield %>%
data.table() %>%
.[, geometry := NULL] %>%
group_by(year) %>%
summarize(
corn_yield = mean(corn_yield, na.rm = TRUE)
) %>%
filter(!is.na(year))
mean_yield
ggplot(data = mean_yield) +
geom_line(aes(x = year, y = corn_yield))
ggplot(data = mean_yield) +
geom_line(x = year, y = corn_yield)
data('diamonds')
premium <- diamonds %>%
filter(
cut=='Premium' & color %in% c('E','I','F')
)
#--- take a look ---#
premium
ggplot(data = premium) +
geom_histogram(aes(x = price), color = "blue", fill = "white")
paste0("R", " rocks")
set.seed(893269)
#--- the number of observations ---#
# this is what we change
N <- 10 # number of observations
B <- 1000 # number of iterations
p <- 0.3 # mean of the Bernoulli distribution
storage <- rep(0, B)
#--- draw from Bern[0.3] (x distributed as Bern[0.3]) ---#
x_seq <- runif(N) <= p
x_seq
p
#--- draw from Bern[0.3] (x distributed as Bern[0.3]) ---#
x_seq <- runif(N) <= p
x_seq
#--- sample mean ---#
x_mean <- mean(x_seq)
x_mean
#--- normalize ---#
lhs <- sqrt(N) * (x_mean - p)
lhs
#--- the number of observations ---#
# this is what we change
N <- 10 # number of observations
B <- 1000 # number of iterations
p <- 0.3 # mean of the Bernoulli distribution
storage <- rep(0, B)
for (i in 1:B) {
#--- draw from Bern[0.3] (x distributed as Bern[0.3]) ---#
x_seq <- runif(N) <= p
#--- sample mean ---#
x_mean <- mean(x_seq)
#--- normalize ---#
lhs <- sqrt(N) * (x_mean - p)
#--- save lhs to storage ---#
storage[i] <- lhs
}
data_pdf <- data.frame(
x = seq(-2, 2, length = 1000),
y = dnorm(seq(-2, 2, length = 1000), sd = sqrt(p * (1 - p)))
)
g_N_10 <-
ggplot() +
geom_density(
data = data.frame(x = storage),
aes(x = x, color = "sample distribution")
) +
geom_line(
data = data_pdf,
aes(y = y, x = x, color = "pdf of N(0,0.21)")
) +
scale_color_manual(
values = c("sample distribution" = "blue", "pdf of N(0,0.21)" = "red"),
name = ""
) +
theme(
legend.position = "bottom"
)
library(tidyverse)
data_pdf <- data.frame(
x = seq(-2, 2, length = 1000),
y = dnorm(seq(-2, 2, length = 1000), sd = sqrt(p * (1 - p)))
)
g_N_10 <-
ggplot() +
geom_density(
data = data.frame(x = storage),
aes(x = x, color = "sample distribution")
) +
geom_line(
data = data_pdf,
aes(y = y, x = x, color = "pdf of N(0,0.21)")
) +
scale_color_manual(
values = c("sample distribution" = "blue", "pdf of N(0,0.21)" = "red"),
name = ""
) +
theme(
legend.position = "bottom"
)
g_N_10
suppressMessages(library(sf))
suppressMessages(library(ggplot2))
suppressMessages(library(patchwork))
install.packages("patchqwork")
install.packages("patchwork")
suppressMessages(library(sf))
suppressMessages(library(ggplot2))
suppressMessages(library(patchwork))
suppressMessages(library(mapview))
#--- Kansas county borders ---#
KS_counties <- readRDS("./Data/KS_county_borders.rds")
#--- Kansas county borders ---#
KS_counties <- readRDS("../Data/KS_county_borders.rds")
here::here()
install.packages("here")
here::here()
sewd("/Users/tmieno2/Downloads")
setwd("/Users/tmieno2/Downloads")
#--- Kansas county borders ---#
KS_counties <- readRDS("./Data/KS_county_borders.rds")
#--- HPA boundary ---#
hpa <- st_read(dsn = "./Data", layer = "hp_bound2010") %>%
.[1, ] %>%
st_transform(st_crs(KS_counties))
#--- all the irrigation wells in KS ---#
KS_wells <- readRDS("./Data/Kansas_wells.rds") %>%
st_transform(st_crs(KS_counties))
#--- US railroad ---#
rail_roads <- st_read(dsn = "./Data", layer = "tl_2015_us_rails") %>%
st_transform(st_crs(KS_counties))
#--- Kansas portion of HPA ---#
hpa_KS <- st_crop(hpa, st_bbox(KS_counties))
hpa_KS
KS_wells
hpa
#--- Kansas county borders ---#
KS_counties <- readRDS("./Data/KS_county_borders.rds")
KS_counties
class(KS_counties)
flextable(KS_counties)
library(flextable)
flextable(KS_counties[1:4,])
st_bbox(KS_counties)
st_bbox(KS_counties) %>% st_as_sfc()
st_bbox(KS_counties) %>% st_as_sfc() %>%  st_buffer(dist = 1)
st_bbox(KS_counties) %>% st_as_sfc() %>%  st_buffer(dist = 1) %>%  plot()
KS_corn_price <- KS_counties %>%
mutate(
corn_price = seq(3.2, 3.9, length = nrow(.))
) %>%
dplyr::select(COUNTYFP, corn_price)
libray(tidyverse)
library(tidyverse)
KS_corn_price <- KS_counties %>%
mutate(
corn_price = seq(3.2, 3.9, length = nrow(.))
) %>%
dplyr::select(COUNTYFP, corn_price)
KS_corn_price
setwd("/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-8-SpatialData")
library(sf)
library(stars)
library(terra)
library(patchwork)
library(data.table)
library(mapview)
library(tidyverse)
library(raster)
library(tmap)
library(exactextractr)
library(knitr)
opts_knit$set(error = TRUE, root.dir = here("Chapter-8-SpatialData"))
library(sf)
library(stars)
library(terra)
library(patchwork)
library(data.table)
library(mapview)
library(tidyverse)
library(raster)
library(here)
library(tmap)
library(exactextractr)
library(knitr)
opts_knit$set(error = TRUE, root.dir = here("Chapter-8-SpatialData"))
options(knitr.duplicate.label = "allow")
setwd("/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-8-SpatialData")
treatment_blocks <- st_read(dsn = "./Data", layer = "ZP_TRT_Blocks_Buff") %>%
#--- transform the CRS so that it is consistent with the raster data ---#
st_transform(4326)
yield <-
st_read(dsn = "./Data", layer = "Stevens_Centuro_YLD_shp") %>%
# dplyr::select(Yld_Vol_Dr) %>%
# rename(dry_yield = Yld_Vol_Dr) %>%
#--- create fake yield data ---#
mutate(yield = runif(n()) * 240) %>%
#--- transform the CRS so that it is consistent with the raster data ---#
st_transform(4326)
ndre <- raster("./Data/NDRE.tif")
install.packages("rgdal")
ndre <- raster("./Data/NDRE.tif")
ndre
plot(ndre)
treatment_blocks <- st_read(dsn = "./Data", layer = "ZP_TRT_Blocks_Buff") %>%
#--- transform the CRS so that it is consistent with the raster data ---#
st_transform(4326)
treatment_blocks <- st_read(dsn = "./Data", layer = "ZP_TRT_Blocks_Buff") %>%
#--- transform the CRS so that it is consistent with the raster data ---#
st_transform(4326)
yield <-
st_read(dsn = "./Data", layer = "Stevens_Centuro_YLD_shp") %>%
# dplyr::select(Yld_Vol_Dr) %>%
# rename(dry_yield = Yld_Vol_Dr) %>%
#--- create fake yield data ---#
mutate(yield = runif(n()) * 240) %>%
#--- transform the CRS so that it is consistent with the raster data ---#
st_transform(4326)
treatment_blocks
yield
ndre
treatment_blocks
plot(treatment_blocks)
plot(yield)
ndre
plot(ndre)
treatment_blocks
treatment_blocks
plot(treatment_blocks)
ndre_extracted <- raster::extract(ndre, yield)
ndre_extracted
plot(yield)
yield <- mutate(yield, NDRE = ndre_extracted)
yield <- mutate(yield, NDRE = ndre_extracted)
yield
filter(yield, !is.na(NDRE))
yield
ndre_extracted
install.packages("exactextractr")
ndre_extracted <- exact_extract(ndre, treatment_blocks)
ndre_extracted
ndre_extracted
ndre_extracted[[1]]
ndre_extracted[[2]]
ndre_extracted[[2]] %>%  class()
ndre_extracted %>% bind_rows()
extracted_value <- ndre_extracted %>% bind_rows()
extracted_value
extracted_value <- ndre_extracted %>% bind_rows(.id = "id")
extracted_value
extracted_value <- ndre_extracted %>% bind_rows(.id = "id") %>% data.table()
<- exact_extract(ndre, treatment_blocks)
ndre_extracted
extracted_value
treatment_blocks
<- ndre_extracted %>% bind_rows(.id = "id") %>% data.table()
extracted_value
ndre_extracted
View(ndre_extracted)
extracted_value <- ndre_extracted %>% bind_rows(.id = "fieuhrfgiru") %>% data.table()
extracted_value
a_list <- list(
a = data.frame(b = 1, c = 2),
b = data.frame(b = 3, c = 5)
)
a_list
a_list %>%  bind_rows()
a_list %>%  bind_rows(.id = "elifuheiruhf")
a_list <- list(
aieufhreiu = data.frame(b = 1, c = 2),
bswiufher = data.frame(b = 3, c = 5)
)
a_list %>%  bind_rows(.id = "elifuheiruhf")
a_list <- list(
data.frame(b = 1, c = 2),
data.frame(b = 3, c = 5)
)
a_list
a_list %>%  bind_rows(.id = "elifuheiruhf")
extracted_value
ndre_mean <-
ndre_extracted %>%
bind_rows(.id = "id") %>%
#--- convert from character to numeric  ---#
mutate(id = as.numeric(id)) %>%
group_by(id) %>%
summarize(NDRE = mean(value))
ndre_mean
ndre_extracted <- exact_extract(ndre, treatment_blocks, fun = "mean")
ndre_extracted
ndre
ndre_stack <- stack(ndre, ndre, ndre)
ndre_stack
ndre_stack_extracted <- exact_extract(ndre_stack, treatment_blocks)
ndre_stack_extracted
ndre_stack_extracted <-
exact_extract(ndre_stack, treatment_blocks) %>%
bind_rows(.id = "id")
ndre_stack_extracted
library(wooldridge)
data("wage2")
wage2
#* regress educ on exper, IQ, and sibs
first_reg <- feols(educ ~ exper + IQ + sibs, data = wage2)
library(fixest)
#* regress educ on exper, IQ, and sibs
first_reg <- feols(educ ~ exper + IQ + sibs, data = wage2)
first_reg
first_reg$fitted.values
#* predict educ as a function of exper, IQ, and sibs
wage2 <- mutate(wage2, educ_hat = first_reg$fitted.values)
wage2
wage2 %>%
relocate(educ_hat) %>%
head()
#* regression with educ_hat in place of educ
second_reg <- feols(wage ~ educ_hat + exper, data = wage2)
#* see the results
second_reg
install.packages("ggspatial")
install.packages("pacman")
install.packages("ncdf4")
install.packages("caret")
install.packages("xaringan")
install.packages("xaringanExtra")
install.packages("xaringanthemer")
install.packages("DT")
install.packages("tictoc")
install.packages("RefManageR")
install.packages("tmap")
install.packages("extrafont")
install.packages("flipbookr")
install.packages("flair")
install.packages("gganimate")
install.packages("fixest")
install.packages("modelsummary")
install.packages("officer")
install.packages("officedown")
install.packages("flextable")
install.packages("tigris")
install.packages("gt")
install.packages("transformr")
citation("soilDB")
citation("tidyusda")
citation("tidycensus")
citation("tidyUSDA")
citation("soilDB")
citation("fixest")
citation("ggplot2")
citation("data.table")
citation("sf")
citation("fixest")
