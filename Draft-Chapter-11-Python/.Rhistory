library(here)
library(tidyverse)
# Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
library(reticulate)
use_python("/usr/local/bin/python3", require = TRUE)
py_config()
setwd(here("Chapter-11-Python"))
source_python("add.py")
add(1, 2)
os <- import("os")
eml <- import("econml")
os <- import("seaborn")
os <- import("pygam")
os <- import("seaborn")
os <- import("os")
eml <- import("econml")
library(knitr)
# library(here)
library(modelsummary)
library(data.table)
library(tidyverse)
library(maps)
library(flextable)
library(grf)
library(RColorBrewer)
library(patchwork)
library(plotly)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(viridis)
library(grid)
library(gridExtra)
library(here)
library(flextable)
library(reticulate)
# knitr::opts_chunk$set(echo = TRUE)
opts_knit$set(root.dir = here::i_am("GitControlled/Codes/CMLAnalysis/run_EconML.rmd"))
# opts_knit$set(root.dir = "~/Dropbox/ResearchProject/HeterogeneousAllocation")
opts_chunk$set(
fig.align = "center",
fig.retina = 5,
warning = FALSE,
message = FALSE,
cache = FALSE, # <-- T
cache.lazy = FALSE,
echo = TRUE
)
reticulate::repl_python()
#--- import the data ---# (yearly data)
ir_data <-
readRDS(here("Shared/Data/ir_reg.rds")) %>%
.[source %in% c("Meter", "METER", "metered"), ] %>%
.[, trs := paste(twnid, rngid, section, sep = "_")] %>%
.[, tr := paste(twnid, rngid, sep = "_")] %>%
.[, phase1 := ifelse(year < 2008, 1, 0)] %>%
.[, phase2 := ifelse(year >= 2008, 1, 0)]
#--- data ---#
data_w_W1 <- ir_data %>%
.[Low_Tri_5mi == 1, ] %>%
.[, `:=`(
#--- LR east vs TB (2007-2008)---#
treat1e = ifelse(phase1 == 1 & nrdname == "Lower Republican" & in_east == 1, 1, 0),
#--- LR west vs TB (2007 - 2008) ---#
treat1w = ifelse(phase1 == 1 & nrdname == "Lower Republican" & in_west == 1, 1, 0),
#--- LR vs TB (2008 - 2015)---#
treat2 = ifelse(((nrdname == "Lower Republican" & phase2 == 1) | (t5r22 == 1 & year >= 2009)), 1, 0)
)] %>%
.[, `:=`(
mean_precip = mean(precip_in),
mean_gdd = mean(gdd_in),
mean_tmin = mean(tmin_in),
mean_tmax = mean(tmax_in)
), by = wellid]
#--- variables to be used in the analysis ---#
cov_ls <- c(
"precip_in", "tmin_in", "tmax_in", "gdd_in",
"silt_pct", "clay_pct", "slope", "kv", "awc"
)
all_vars <- c(cov_ls, "usage", "treat2", "tr", "year")
#--- set target variable ---#
target_var <- "precip_in"
#--- W1 case 3: 11 inches (LR) vs no limit (TB) (2008 - 2015) ---#
data_reg_case3 <- data_w_W1 %>%
.[year >= 2008, ] %>%
.[, ..all_vars] %>%
.[usage <= 40, ] %>% # Why?? -> make upper limit
.[, tr_year := factor(paste0(tr, year))] %>%
na.omit()
#### ==== Training data ==== ####
Y <- data_reg_case3[, usage] %>%
as.array()
T <- data_reg_case3[, treat2] %>%
as.array()
X_train <- data_reg_case3[, cov_ls, with = FALSE] %>%
as.matrix() %>%
unname()
## === Testing data === ##
min_temp <- data_reg_case3[[target_var]] %>% quantile(prob = 0.025)
max_temp <- data_reg_case3[[target_var]] %>% quantile(prob = 0.90)
X_eval_base <- copy(data_reg_case3)[, cov_ls, with = FALSE] %>%
as_tibble(.) %>%
summarize_all(mean) %>%
data.table()
X_eval <- copy(X_eval_base) %>%
setnames(target_var, "temp_var") %>%
.[rep(1, 1000), ] %>%
.[, temp_var := seq(min_temp, max_temp, length = 1000)] %>%
setnames("temp_var", target_var) %>%
# reoder columns
.[, ..cov_ls] %>%
as.matrix() %>%
unname()
reticulate::repl_python()
